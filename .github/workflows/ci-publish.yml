---

name: Publish release

on:
  push:
    tags:
      # Run when a tag is pushed with a valid semantic version number
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install poetry-dynamic-versioning
          poetry build

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-artifact
          path: dist/

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Get build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-artifact
          path: dist/

      - name: Install from build
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install resqpy --find-links=dist

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        run: pytest --buildtest

  publish:
    name: Publish to PyPI
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Get build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-artifact
          path: dist/

      - name: Upload to PyPI
        run: |
          poetry publish -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }}
