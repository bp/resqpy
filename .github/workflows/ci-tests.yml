---

name: Python CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  static-analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[tests]"

      # Post in-line comments for any issues found
      # Do not run if coming from a forked repo
      # See https://github.com/marketplace/actions/lint-action
      - name: Run linters (with annotations)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: wearerequired/lint-action@v1
        with:
          flake8: true
          mypy: true
          mypy_args: resqpy

      # Alternative step that works with forked repo
      - name: Run linters (without annotations)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: |
          flake8 .
          mypy resqpy

      - name: Code formatting
        run: yapf --diff -r -p .

  unit-tests:
    name: Unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          # Ensure tags are fetched, for creating version string
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install resqpy
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e ".[tests]"

      - name: Run pytest
        run: |
          pytest --cov=resqpy --junitxml=pytest.xml

      - name: Upload pytest artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest.xml

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      # - name: Publish Unit Test Results
      #   if: always()
      #   uses: EnricoMi/publish-unit-test-result-action@v1
        # with:
        #   files: *.xml
